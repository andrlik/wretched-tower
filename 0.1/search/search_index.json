{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#unreleased","title":"Unreleased","text":"<ul> <li>Initial release</li> </ul>"},{"location":"code_of_conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or  advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic  address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a  professional setting</li> </ul>"},{"location":"code_of_conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at daniel@andrlik.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p> <p>For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq</p>"},{"location":"license/","title":"License","text":"<p>Copyright (c) 2024, Daniel Andrlik All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ul> <li> <p>Redistributions of source code must retain the above copyright notice, this   list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above copyright notice, this   list of conditions and the following disclaimer in the documentation and/or   other materials provided with the distribution.</p> </li> <li> <p>Neither the name of Django Quote Service nor the names of its   contributors may be used to endorse or promote products derived from this   software without specific prior written permission.</p> </li> </ul> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"security/","title":"Security","text":""},{"location":"security/#reporting-security-issues","title":"\ud83d\udd10 Reporting Security Issues","text":"<p>Do not open issues that might have security implications!</p> <p>It is critical that security related issues are reported privately so we have time to address them before they become public knowledge.</p> <p>Vulnerabilities can be reported by submitting a private advisory via Github.</p> <p>Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:</p> <ul> <li>Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)</li> <li>Full paths of source file(s) related to the manifestation of the issue</li> <li>The location of the affected source code (tag/branch/commit or direct URL)</li> <li>Any special configuration required to reproduce the issue</li> <li>Environment (e.g. Linux / Windows / macOS)</li> <li>Step-by-step instructions to reproduce the issue</li> <li>Proof-of-concept or exploit code (if possible)</li> <li>Impact of the issue, including how an attacker might exploit the issue</li> </ul> <p>This information will help us triage your report more quickly.</p>"},{"location":"security/#preferred-languages","title":"Preferred Languages","text":"<p>We prefer all communications to be in English.</p>"},{"location":"reference/wretched_tower/tower/","title":"tower","text":""},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.Tower","title":"Tower  <code>dataclass</code>","text":"<pre><code>Tower(dice_size: int = 6, dice_amount: int = 100)\n</code></pre> <p>A given instance of the dice tower.</p> <p>Attributes:</p> Name Type Description <code>roll_distributions</code> <code>list[dict[int, int]]</code> <p>A list of the previous roll results and their counts.</p> <code>possible_values</code> <code>list[int]</code> <p>A list of the possible die values based on size.</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def __init__(self, dice_size: int = 6, dice_amount: int = 100) -&gt; None:\n    if dice_size &lt; 2:  # noqa: PLR2004\n        msg = \"Dice must have more than one side!\"\n        raise ValueError(msg)\n    self._dice_size = dice_size\n    self.set_dice_left(dice_amount)\n    self.possible_values = self._get_possible_die_values()\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.Tower._get_possible_die_values","title":"_get_possible_die_values","text":"<pre><code>_get_possible_die_values() -&gt; list[int]\n</code></pre> <p>Get a list of all the possible values based on the dice size.</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def _get_possible_die_values(self) -&gt; list[int]:\n    \"\"\"Get a list of all the possible values based on the dice size.\"\"\"\n    current_value = 1\n    possible_values = []\n    while current_value &lt;= self._dice_size:\n        possible_values.append(current_value)\n        current_value += 1\n    return possible_values\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.Tower.get_result_dict_template","title":"get_result_dict_template","text":"<pre><code>get_result_dict_template() -&gt; dict[int, int]\n</code></pre> <p>Get a dictionary of possible dice values and zeroed counts.</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def get_result_dict_template(self) -&gt; dict[int, int]:\n    \"\"\"Get a dictionary of possible dice values and zeroed counts.\"\"\"\n    results = {}\n    for x in self.possible_values:\n        results[x] = 0\n    return results\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.Tower.roll_tower","title":"roll_tower","text":"<pre><code>roll_tower() -&gt; RollResult\n</code></pre> <p>Using the dice remaining, roll them and then remove any that are ones, recording the results.</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def roll_tower(self) -&gt; RollResult:\n    \"\"\"\n    Using the dice remaining, roll them and then remove any that are ones,\n    recording the results.\n    \"\"\"\n    dice_to_roll = self.get_dice_left()\n    results = self.get_result_dict_template()\n    for x in self.possible_values:\n        results[x] = 0\n    for _x in range(self._dice_left):\n        die_result = random.randint(1, self._dice_size)  # noqa: S311\n        results[die_result] += 1\n    self.set_dice_left(self._dice_left - results[1])\n    self.roll_distributions.append(\n        RollDistribution(dice_rolled=dice_to_roll, dice_results=results)\n    )\n    return RollResult(dice_rolled=dice_to_roll, dice_lost=results[1])\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.TowerApp","title":"TowerApp","text":"<p>               Bases: <code>App</code></p> <p>A TUI that manages a tumbling tower mechanic via die rolls.</p>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.TowerApp.action_toggle_dark","title":"action_toggle_dark","text":"<pre><code>action_toggle_dark() -&gt; None\n</code></pre> <p>Toggles between dark and light mode.</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def action_toggle_dark(self) -&gt; None:\n    \"\"\"Toggles between dark and light mode.\"\"\"\n    self.theme = (  # type: ignore\n        \"textual-dark\" if self.theme == \"textual-light\" else \"textual-light\"\n    )\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.TowerApp.compose","title":"compose","text":"<pre><code>compose() -&gt; ComposeResult\n</code></pre> <p>Create child widgets</p> Source code in <code>src/wretched_tower/tower.py</code> <pre><code>def compose(self) -&gt; ComposeResult:\n    \"\"\"Create child widgets\"\"\"\n    yield Header()\n    yield Footer()\n</code></pre>"},{"location":"reference/wretched_tower/tower/#src.wretched_tower.tower.TowerWidget","title":"TowerWidget","text":"<p>               Bases: <code>Widget</code></p> <p>A widget that displays the current tower.</p>"}]}